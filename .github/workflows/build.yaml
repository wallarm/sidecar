name: Build new version

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

env:
  IMAGE: wallarm/sidecar-controller

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      helm_args: ${{ steps.compute_helm_args.outputs.helm_args }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build
        run: |
          make build TAG=${GITHUB_SHA} IMAGE=${IMAGE}
          mkdir artifacts
          docker save -o artifacts/docker-image.tar ${IMAGE}:${GITHUB_SHA}

      - name: Save artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-artifact
          path: artifacts/docker-image.tar
          retention-days: 1

      - name: Compute Helm arguments
        id: compute_helm_args
        run: |
          HELM_ARGS="--set controller.image.tag=${GITHUB_SHA}"
          echo "::set-output name=helm_args::${HELM_ARGS}"

  test:
    name: Test
    needs: build
    uses: wallarm/sidecar/.github/workflows/test_helm.yaml@main
    secrets:
      API_TOKEN: ${{ secrets.API_TOKEN }}
    with:
      ref: "main"
      run_lint: false
      run_validate: false
      run_test: true
      helm_args: ${{ needs.build.outputs.helm_args }}
      load_artifact: true

  push:
    name: Push
    needs: test
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.format_tag.outputs.tag }}
    steps:
      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER}}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Restore artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-artifact
          path: artifacts

      - name: Load image
        run: docker load -q -i artifacts/docker-image.tar

      - name: Format tag
        id: format_tag
        run: echo "::set-output name=tag::$(echo ${GITHUB_REF_NAME} | cut -d 'v' -f 2)"

      - name: Tag and push
        run: |
          docker tag ${IMAGE}:${GITHUB_SHA} ${IMAGE}:${{ steps.format_tag.outputs.tag }}
          docker push ${IMAGE}:${{ steps.format_tag.outputs.tag }}

  update_versions:
    name: Update versions
    needs: push
    uses: wallarm/sidecar/.github/workflows/update_versions.yaml@main
    secrets:
      HELM_PUBLISH_TOKEN: ${{ secrets.HELM_PUBLISH_TOKEN }}
    with:
      controller_update: true
      controller_tag: ${{ needs.push.outputs.tag }}