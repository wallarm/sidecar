name: Update versions

on:
  workflow_dispatch:
    inputs:
      controller_update:
        description: Update controller tag?
        type: boolean
        required: true
        default: false
      controller_tag:
        description: Tag for controller image
        type: string
        required: false
      upstream_update:
        description: Update upstream tag?
        type: boolean
        required: true
        default: false
      upstream_tag:
        description: Tag for upstream images
        type: string
        required: false
      sidecar_update:
        description: Update sidecar tag?
        type: boolean
        required: true
        default: false
      sidecar_tag:
        description: Tag for sidecar image
        type: string
        required: false

  workflow_call:
    inputs:
      controller_update:
        type: boolean
        required: false
      controller_tag:
        type: string
        required: false
      upstream_update:
        type: boolean
        required: false
      upstream_tag:
        type: string
        required: false
      sidecar_update:
        type: boolean
        required: false
      sidecar_tag:
        type: string
        required: false

jobs:
  update_versions:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: 'main'

      - name: Checkout a new branch
        run: git checkout -b update_versions

      - name: Get latest Chart version
        id: get_version
        run: echo "::set-output name=version::$(yq -r '.version' helm/Chart.yaml)"

      - name: Increment Chart version
        id: bump_version
        uses: christian-draeger/increment-semantic-version@1.0.2
        with:
          current-version: ${{ steps.get_version.outputs.version }}
          version-fragment: 'bug'

      - name: Update Chart version
        run: |
          echo "New chart version: ${{ steps.bump_version.outputs.next-version }}"
          yq e -i '.version = "${{ steps.bump_version.outputs.next-version }}"' helm/Chart.yaml

      - name: Update upstream version
        if: ${{ inputs.upstream_update }}
        run: |
          APP_VERSION=$(echo ${{ inputs.upstream_tag }} | cut -d "-" -f 1) 
          yq e -i '.appVersion = "${APP_VERSION}"' helm/Chart.yaml
          yq e -i '.postanalytics.addnode.image.tag = "${{ inputs.upstream_tag }}"' helm/values.yaml
          yq e -i '.postanalytics.exportenv.image.tag = "${{ inputs.upstream_tag }}"' helm/values.yaml
          yq e -i '.postanalytics.cron.image.tag = "${{ inputs.upstream_tag }}"' helm/values.yaml
          yq e -i '.postanalytics.tarantool.image.tag = "${{ inputs.upstream_tag }}"' helm/values.yaml
          yq e -i '.postanalytics.heartbeat.image.tag = "${{ inputs.upstream_tag }}"' helm/values.yaml
          yq e -i '.postanalytics.appstructure.image.tag = "${{ inputs.upstream_tag }}"' helm/values.yaml

      - name: Update sidecar version
        if: ${{ inputs.sidecar_update }}
        run: yq e -i '.config.sidecar.image.tag = "${{ inputs.sidecar_tag }}"' helm/values.yaml

      - name: Update controller version
        if: ${{ inputs.controller_update }}
        run: yq e -i '.controller.image.tag = "${{ inputs.controller_tag }}"' helm/values.yaml

      - name: Compute commit message
        run: |
          COMMIT_MESSAGE="Update versions. Chart: ${{ steps.bump_version.outputs.next-version }}"
          if [ ${{ inputs.upstream_update }} = true ]; then
            COMMIT_MESSAGE+=" Upstream: ${{ inputs.upstream_tag }}"
          fi
          if [ ${{ inputs.sidecar_update }} = true ]; then
            COMMIT_MESSAGE+=" Sidecar: ${{ inputs.sidecar_tag }}"
          fi
          if [ ${{ inputs.controller_update }} = true ]; then
            COMMIT_MESSAGE+=" Controller: ${{ inputs.controller_tag }}"
          fi
          echo "COMMIT_MESSAGE=${COMMIT_MESSAGE}" >> $GITHUB_ENV

      - name: Create and merge PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.name 'github-actions[bot]'
          git config --local user.email 'github-actions[bot]@users.noreply.github.com'
          git add helm/Chart.yaml helm/values.yaml
          git commit -m "${COMMIT_MESSAGE}"
          git push --set-upstream origin update_versions
          gh pr create --fill
          gh pr merge update_versions --merge --delete-branch
