name: Update versions

on:
  workflow_dispatch:
    inputs:
      controller_update:
        description: Update controller tag?
        type: boolean
        required: true
        default: false
      controller_tag:
        description: Tag for controller image
        type: string
        required: false
      upstream_update:
        description: Update upstream tag?
        type: boolean
        required: true
        default: false
      upstream_tag:
        description: Tag for upstream images
        type: string
        required: false
      sidecar_update:
        description: Update sidecar tag?
        type: boolean
        required: true
        default: false
      sidecar_tag:
        description: Tag for sidecar image
        type: string
        required: false
    secrets:
      HELM_PUBLISH_TOKEN:
        description: Helm publish token
        required: false
      NEWS_API_CREDS:
        description: Credentials for Wallarm NewsAPI
        required: false

  workflow_call:
    inputs:
      controller_update:
        type: boolean
        required: false
      controller_tag:
        type: string
        required: false
      upstream_update:
        type: boolean
        required: false
      upstream_tag:
        type: string
        required: false
      sidecar_update:
        type: boolean
        required: false
      sidecar_tag:
        type: string
        required: false
    secrets:
      HELM_PUBLISH_TOKEN:
        description: Helm publish token
        required: false
      NEWS_API_CREDS:
        description: Credentials for Wallarm NewsAPI
        required: false

jobs:
  update_versions:
    name: Update versions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: 'main'

      - name: Get latest Chart version
        id: get_latest_chart_version
        run: echo "::set-output name=version::$(yq -r '.version' helm/Chart.yaml)"

      - name: Increment Chart version
        id: bump_chart_version
        uses: christian-draeger/increment-semantic-version@1.0.2
        with:
          current-version: ${{ steps.get_latest_chart_version.outputs.version }}
          version-fragment: 'bug'

      - name: Update Chart version
        run: |
          echo "New chart version: ${{ steps.bump_chart_version.outputs.next-version }}"
          yq e -i '.version = "${{ steps.bump_chart_version.outputs.next-version }}"' helm/Chart.yaml

      - name: Update upstream version
        if: ${{ inputs.upstream_update }}
        id: update_upstream_version
        run: |
          export TAG="${{ inputs.upstream_tag }}"
          export VERSION=$(echo "${TAG}" | cut -d "-" -f 1)    
          yq e -i '.appVersion = env(VERSION)' helm/Chart.yaml
          yq e -i \
          '(.postanalytics.addnode.image.tag = env(TAG)) |
           (.postanalytics.exportenv.image.tag = env(TAG)) |
           (.postanalytics.cron.image.tag = env(TAG)) |
           (.postanalytics.tarantool.image.tag = env(TAG)) |
           (.postanalytics.heartbeat.image.tag = env(TAG)) |
           (.postanalytics.appstructure.image.tag = env(TAG))' helm/values.yaml
          echo "::set-output name=next-version::${VERSION}"

      - name: Update sidecar version
        if: ${{ inputs.sidecar_update }}
        run: yq e -i '.config.sidecar.image.tag = "${{ inputs.sidecar_tag }}"' helm/values.yaml

      - name: Update controller version
        if: ${{ inputs.controller_update }}
        run: yq e -i '.controller.image.tag = "${{ inputs.controller_tag }}"' helm/values.yaml

      - name: Compute commit message
        run: |
          COMMIT_MESSAGE="Bump versions. Chart: ${{ steps.bump_chart_version.outputs.next-version }}"
          if [ ${{ inputs.upstream_update }} = true ]; then
            COMMIT_MESSAGE+=" Upstream: ${{ steps.update_upstream_version.outputs.next-version }}"
          fi
          if [ ${{ inputs.sidecar_update }} = true ]; then
            COMMIT_MESSAGE+=" Sidecar: ${{ inputs.sidecar_tag }}"
          fi
          if [ ${{ inputs.controller_update }} = true ]; then
            COMMIT_MESSAGE+=" Controller: ${{ inputs.controller_tag }}"
          fi
          echo "COMMIT_MESSAGE=${COMMIT_MESSAGE}" >> $GITHUB_ENV

      - name: Create and merge PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_BRANCH="bump-versions/${{ steps.bump_chart_version.outputs.next-version }}"
          git checkout -b ${PR_BRANCH}
          git config --local user.name 'github-actions[bot]'
          git config --local user.email 'github-actions[bot]@users.noreply.github.com'
          git add helm/Chart.yaml helm/values.yaml
          git commit -m "${COMMIT_MESSAGE}"
          git push --set-upstream origin ${PR_BRANCH}
          gh pr create --fill
          gh pr merge ${PR_BRANCH} --merge --delete-branch

  helm_publish:
    name: Publish new Helm version
    needs: update_versions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: 'main'

      - name: Get versions
        id: get_versions
        run: |
          echo "::set-output name=chart_version::$(yq -r '.version' helm/Chart.yaml)"
          echo "::set-output name=app_version::$(yq -r '.appVersion' helm/Chart.yaml)"

      - name: Publish
        uses: stefanprodan/helm-gh-pages@master
        with:
          token: ${{ secrets.HELM_PUBLISH_TOKEN }}
          charts_dir: .
          charts_url: https://charts.wallarm.com
          linting: off
          repository: helm-charts
          branch: main
          target_dir: wallarm-sidecar
          index_dir: .
          app_version: ${{ steps.get_versions.outputs.app_version }}
          chart_version: ${{ steps.get_versions.outputs.chart_version }}
  call_news_api:
    name: Call Wallarm News API
    needs: update_versions
    if: ${{ inputs.sidecar_update }}
    runs-on: ubuntu-latest
    steps:
      - name: Update latest version of sidecar proxy in Wallarm News DB
        run: |
          curl \
          -H "Authorization: Basic ${{ secrets.NEWS_API_CREDS }}" \
          -H "Content-Type: application/json" \
          --data '{"component_type": "wallarm-sidecar-proxy", "version": "${{ inputs.sidecar_tag }}"}' \
          --request POST \
          --retry 5 \
          https://api.wallarm.com/v1/versions
