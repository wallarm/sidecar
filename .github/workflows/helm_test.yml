name: Helm test

on:
  pull_request:
    branches: ['main']
    types: ['closed', 'opened', 'reopened', 'synchronize']
    paths:
      - 'helm/**'
      - '!helm/Chart.yaml'
      - '!helm/README.md'
      - '!helm/test/**'

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    if: ${{ !contains(github.head_ref, 'update_versions') && !(github.event.action == 'closed' && github.event.pull_request.merged == false) }}
    outputs:
      ref: ${{ steps.check.outputs.ref }}
    steps:
      - name: Check
        id: check
        run: |
          set -x
          if [ "${{ github.event.action }}" == "closed" ] && [ ${{ github.event.pull_request.merged }} == true ]; then
            echo "::set-output name=ref::${{ github.base_ref }}"
          else
            echo "::set-output name=ref::${{ github.head_ref }}"
          fi

  lint:
    name: Helm lint
    runs-on: ubuntu-latest
    needs: check
    if: ${{ github.event.pull_request.merged == true && !contains(github.head_ref, 'update_versions') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.check.outputs.ref }}

      - name: Helm lint
        run: |
          helm version
          helm lint helm/. --debug

  validate:
    name: Validate manifests
    env:
      KUBEVAL_SCHEMA_LOCATION: 'https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/'
    needs:
      - lint
      - check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # 1.19-1.24
        kubeVersion:
          - 1.19.16
          - 1.20.15
          - 1.21.14
          - 1.22.11
          - 1.23.8
          - 1.24.2
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.check.outputs.ref }}

      - name: Helm template
        run: helm template helm/. > result-${{ matrix.kubeVersion }}.yaml --kube-version ${{ matrix.kubeVersion }} --debug

      - name: Kubeval
        uses: instrumenta/kubeval-action@master
        with:
          files: result-${{ matrix.kubeVersion }}.yaml
          version: ${{ matrix.kubeVersion }}
          ignore_missing_schemas: false

  test:
    name: Integration test
    needs:
      - validate
      - check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # 1.19-1.24
        kubeVersion:
          - 1.19.16
          - 1.20.15
          - 1.21.12
          - 1.22.9
          - 1.23.6
          - 1.24.1
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.check.outputs.ref }}

      - name: Create cluster
        uses: helm/kind-action@v1.3.0
        with:
          verbosity: "0"
          wait: "240s"
          config: helm/test/kind/kind.yaml
          node_image: kindest/node:v${{ matrix.kubeVersion }}
          cluster_name: kind

      - name: Wait cluster
        run: |
          kubectl cluster-info
          kubectl wait --for=condition=Ready pods --all --timeout=180s -n kube-system
          echo "current-context:" $(kubectl config current-context)
          echo "environment-kubeconfig:" ${KUBECONFIG}

      - name: Install Helm chart
        run: |
          set -x
          helm version
          helm install wallarm-sidecar helm/. -f helm/values.test.yaml \
          --set config.wallarm.api.host=audit.api.wallarm.com \
          --set config.wallarm.api.token=${{ secrets.API_TOKEN }} \
          --namespace wallarm-sidecar \
          --create-namespace \
          --wait \
          --timeout 5m0s
          kubectl -n wallarm-sidecar wait --for=condition=Ready pods --all --timeout=30s
          kubectl -n wallarm-sidecar get all --namespace wallarm-sidecar

      - name: Run test
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pytest helm/test/integration_test.py

  # Update version triggers if pull request closed and merged
  update_versions:
    name: Update versions
    needs: test
    if: ${{ github.event.action == 'closed' && github.event.pull_request.merged == true }}
    uses: wallarm/sidecar/.github/workflows/update_versions.yaml@main
