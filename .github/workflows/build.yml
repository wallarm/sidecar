name: Build

on:
  push:
    tags:
      - '**'

  workflow_dispatch:

env:
  # IMAGE and TAG here are used just for testing
  IMAGE: quay.io/dmitriev/sidecar-injector
  TAG: test

jobs:
  build:
    name: Docker build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build
        run: |
          make build TAG=${GITHUB_SHA} IMAGE=${IMAGE}
          mkdir artifacts
          docker save ${IMAGE}:${GITHUB_SHA} > artifacts/docker-image.tar

      - name: Save artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-artifact
          path: artifacts/docker-image.tar
          retention-days: 1

  test:
    name: Test
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-artifact
          path: artifacts/docker-image.tar

      - name: Create cluster
        uses: helm/kind-action@v1.3.0
        with:
          verbosity: "0"
          wait: "240s"
          config: helm/test/kind/kind.yaml
          node_image: kindest/node:v1.24.1
          cluster_name: kind

      - name: Wait cluster
        run: |
          kubectl cluster-info
          kubectl wait --for=condition=Ready pods --all --timeout=180s -n kube-system
          echo "current-context:" $(kubectl config current-context)
          echo "environment-kubeconfig:" ${KUBECONFIG}

      - name: Load image
        run: kind load image-archive artifacts/docker-image.tar

      - name: Install Helm chart
        run: |
          set -x
          helm version
          helm install wallarm-sidecar helm/. -f helm/values.test.yaml \
          --set config.wallarm.api.host=audit.api.wallarm.com \
          --set config.wallarm.api.token=${{ secrets.API_TOKEN }} \
          --set controller.image.fullname=${IMAGE}:${GITHUB_SHA} \
          --namespace wallarm-sidecar \
          --create-namespace \
          --wait \
          --timeout 5m0s
          kubectl -n wallarm-sidecar wait --for=condition=Ready pods --all --timeout=30s
          kubectl -n wallarm-sidecar get all --namespace wallarm-sidecar

      - name: Run test
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pytest helm/test/integration_test.py