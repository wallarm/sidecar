apiVersion: apps/v1
kind: Deployment
metadata:
  name: dummy-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dummy-app
  template:
    metadata:
      labels:
        app: dummy-app
        wallarm-sidecar: enabled
    spec:
      containers:
        - name: nginx
          image: nginx:stable-alpine
          ports:
            - name: http
              containerPort: 80
          readinessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
          volumeMounts:
            - name: config
              mountPath: /etc/nginx
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: workload
            items:
              - key: nginx.conf
                path: nginx.conf
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: workload
data:
  nginx.conf: |
    user nginx;
    worker_processes  3;
    error_log  /var/log/nginx/error.log;
    events {
      worker_connections 10240;
    }
    http {
      log_format main '$remote_addr - $remote_user [$time_local] '
                      '"$request" $status $bytes_sent '
                      '"$http_referer" "$http_user_agent" "$gzip_ratio"';
      access_log /var/log/nginx/access.log main;
      server {
        listen 80;
        server_name  _;
        location / {
          return 200;
        }
        # Location for API discovery test
        location /api-discovery-test {
            add_header Api-Discovery-Header "Hello, I am header!";
            return 200 '{"json_response": "Hello, I am json"}';
            default_type application/json;
        }
        # Location for Blocking Tor Source Type
        location /blocking-by-tor-test {
              add_header Block-by-Tor "Hello, I am header!";
              return 200 '{"json_response": "Hello, I am json"}';
              default_type application/json;
        }
        # Some mocks for test_api_abuse_prevention.py
        location /.git {
            if ($http_custom_id) {
                return 400;
            }
            return 200;
        }
        location /admin {
            if ($http_custom_id) {
                return 401;
            }
            return 200;
        }
        location /api/v2 {
            if ($http_custom_id) {
                return 502;
            }
            return 200;
        }
      }
    }
