nameOverride: ""
fullnameOverride: ""
###
### Global config options
###

config:
  ### Wallarm node configuration. Many of these parameters in this section can be overwritten individually
  ### for each pod with pod annotations
  ###
  wallarm:
    api:
      ### Token to authorize in the Wallarm Cloud. Required.
      ###
      token: ""
      ### Address of Wallarm API service
      ###
      host: api.wallarm.com
      ### Port of Wallarm API service
      ###
      port: 443
      ### Use SSL to connect to Wallarm API service: `true` or `false`
      ###
      useSSL: true
      ### Verify CA during connecting to Wallarm API service: `true` or `false`
      ###
      caVerify: true
    ### Fallback mode. With the value set to on, NGINX has the ability to enter an emergency mode; if proton.db
    ### or custom ruleset cannot be downloaded, this setting disables the Wallarm module for the http, server,
    ### and location blocks, for which the data fails to download. NGINX keeps functioning.
    ###
    fallback: "off"
    ### Wallarm mode: `monitoring, `block` or `off`. See details in here:
    ### https://docs.wallarm.com/admin-en/configure-parameters-en/#wallarm_mode
    ###
    mode: monitoring
    ### Manages the ability to override the wallarm_mode values via filtering in
    ### the Cloud (custom ruleset): `on`, `off` or `strict`
    ###
    modeAllowOverride: "on"
    ### Enables additional validation of the SQL Injection attacks via the libdetection library: `on` or `off`
    ### https://docs.wallarm.com/admin-en/configure-parameters-en/#wallarm_enable_libdetection
    ###
    enableLibDetection: "off"
    ### Whether to analyze the application responses for attacks: `on` or `off`
    ### https://docs.wallarm.com/admin-en/configure-parameters-en/#wallarm_parse_response
    ###
    parseResponse: "on"
    ### Whether to analyze WebSocket's messages for attacks: `on` or `off`
    ### https://docs.wallarm.com/admin-en/configure-parameters-en/#wallarm_parse_websocket
    ###
    parseWebsocket: "off"
    ### Whether to decompress compressed data returned in the application response: `on` or `off`
    ###
    unpackResponse: "on"
    ### Post-analytics node endpoint configuration
    ### https://docs.wallarm.com/admin-en/configure-parameters-en/#wallarm_unpack_response
    ###
    upstream:
      ### Defines the number of immediate reconnects to the Tarantool or Wallarm API
      ###
      connectAttempts: 10
      ### Defines the interval between attempts to reconnect to the Tarantool or Wallarm API
      ###
      reconnectInterval: 15s
    cron:
      exportEnvironment:
        schedule: "0 */1 * * *"
        command: "/opt/wallarm/ruby/usr/share/wallarm-common/export-environment -l STDOUT"
        timeout: 10m
      exportMetrics:
        schedule: "* * * * *"
        command: "/opt/wallarm/ruby/usr/share/wallarm-common/export-metrics -l STDOUT"
        timeout: 3h
      syncIpLists:
        schedule: "* * * * *"
        command: "/opt/wallarm/ruby/usr/share/wallarm-common/sync-ip-lists -l STDOUT"
        timeout: 3h
      syncIpListsSource:
        schedule: "*/5 * * * *"
        command: "/opt/wallarm/ruby/usr/share/wallarm-common/sync-ip-lists-source -l STDOUT"
        timeout: 3h
  ### Default Annotation prefix which is used in sidecar template to overwrite default values
  annotationPrefix: sidecar.wallarm.io
  ### Default sidecar injection strategy. Parameters in this section can be overwritten individually
  ### for each pod with pod annotations
  ###
  injectionStrategy:
    ### Sidecar injection schema: `single` or `split`. Single schema injects a single container
    ### (well-known popular sidecar technique, as same as istio or stash) and one or more init
    ### containers. Split schema injects TWO containers as a sidecar (wallarm in first container and
    ### helpers in second one) and one or more init containers.
    ### Use split schema for dividing the CPU/Memory/Storage namespaces between wallarm itself
    ### and helper containers. This can be helpful for highly loaded applications.
    ###
    schema: single
    ### Enables or disables `iptables` init container for automatic port redirection: `true` or `false`.
    ### Disable it only in case of problems with other sidecars that change iptables rule sets.
    ###
    iptablesEnable: true
  ### Default parameters for Nginx configuration of sidecar proxy container. Parameters in this section
  ### can be overwritten individually for each pod with pod annotations
  ###
  nginx:
    ### Fallback listening port of application. This port will be used as a fallback of application port
    ### detection. Sidecar controller will try to detect application port in the following sequence:
    ###   1. Application port number is defined in pod annotation "sidecar.wallarm.io/application-port"
    ###   2. The first available container port which name is "http"
    ###   3. The first available container port
    ###   4. This value (in case of no one container port defined)
    ###
    applicationPort: 80
    ### Listening port for sidecar proxy container. This port is reserved for using by Wallarm sidecar
    ### and cannot be the same as nginx.applicationPort
    ###
    listenPort: 26001
    ### Port for Wallarm status, Nginx stats and health check endpoints
    ###
    statusPort: 10246
    ### Path to Nginx status endpoint (status stub)
    ###
    statusPath: /status
    ### Path to Nginx health check endpoint
    ###
    healthPath: /health
    ### Port for Wallarm status and metrics endpoints
    ###
    wallarmMetricsPort: 18080
    ### Path to Wallarm status endpoint (json format)
    ###
    wallarmStatusPath: /wallarm-status
    ### Port to Wallarm metrics endpoint (prometheus format)
    ###
    wallarmMetricsPath: /wallarm-metrics
  ### Default configuration for sidecar init and regular containers
  ###
  sidecar:
    ### Image for all (init and regular) containers in sidecar schema
    ###
    image:
      registry: docker.io
      image: wallarm/sidecar
      tag: "4.0.3-1"
      pullPolicy: IfNotPresent
    ### Shared security context for all (init and regular) containers in sidecar schema except `iptables` container.
    ### For `iptables` container it is described in `sidecar.initContainers.iptables.securityContext` value
    ###
    securityContext:
      capabilities:
        drop:
          - ALL
        add:
          - NET_BIND_SERVICE
      runAsUser: 101
    ### Default configuration for sidecar container(s). Many of these parameters in this section can be
    ### overwritten individually for each pod with pod annotations.
    ###
    containers:
      ### Traffic flow handler. Core of sidecar schema. Does everything for `single` schema
      ### and only handles traffic for `split` schema
      ###
      proxy:
        ### Enable liveness probe for the container: `true` or `false`
        ###
        livenessProbeEnable: true
        ### Liveness probe configuration for the container
        ###
        livenessProbe:
          httpGet:
            ### The value of `path` below should be the same as `nginx.healthPath`
            ###
            path: /healthz
            port: status
          initialDelaySeconds: 60
          timeoutSeconds: 1
          periodSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        ### Enable readiness probe for the container: `true` or `false`
        ###
        readinessProbeEnable: true
        ### Readiness probe configuration for the container
        ###
        readinessProbe:
          httpGet:
            # The value of `path` below should be the same as `nginx.healthPath`
            path: /healthz
            port: status
          initialDelaySeconds: 60
          timeoutSeconds: 1
          periodSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        ### The number of resources required for the container
        ### https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        ###
        resources: {}
        #  requests:
        #    cpu: 200m
        #    memory: 256Mi
        #  limits:
        #    cpu: 500m
        #    memory: 512Mi
      ### Helper container. Used only in `split` schema. Does everything except traffic handling
      ### for `split` schema
      ###
      helper:
        ### The number of resources required for the container
        ### https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        ###
        resources: {}
        #  requests:
        #    cpu: 100m
        #    memory: 128Mi
        #  limits:
        #    cpu: 300m
        #    memory: 256Mi
    ### Default configuration for sidecar init container(s). Many of these parameters in this section can be
    ### overwritten individually for each pod with pod annotations.
    ###
    initContainers:
      helper:
        ### The number of resources required for the container
        ### https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        ###
        resources: {}
        #  requests:
        #    cpu: 100m
        #    memory: 64Mi
        #  limits:
        #    cpu: 300m
        #    memory: 128Mi
      iptables:
        ### Security context for `iptables` container
        ###
        securityContext:
          capabilities:
            add:
              - NET_ADMIN
            drop:
              - ALL
          privileged: true
        ### The number of resources required for the container
        ### https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        ###
        resources: {}
        #  requests:
        #    cpu: 50m
        #    memory: 32Mi
        #  limits:
        #    cpu: 100m
        #    memory: 64Mi
###
### Global settings
###

### Array of private container registry credentials
### https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
###
imagePullSecrets: []
# - name: secretName

### Configuration for post-analytics module
###
postanalytics:
  ### Number of deployment replicas. Values more that zero doesn't supported officially
  ### https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.21/#deploymentspec-v1-apps
  ###
  replicaCount: 1
  ### Settings for automated rolling updates
  ### https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.21/#deploymentstrategy-v1-apps
  ###
  updateStrategy:
    type: Recreate
  ### Labels to add to the pods
  ###
  podLabels: {}
  # key: value

  ### Annotations to add to the pods
  ###
  podAnnotations: {}
  # key: value

  ### Setting to allow this Pod to schedule onto nodes with matching taints
  ### https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  ###
  tolerations: []
  # - key: "key"
  #   operator: "Equal|Exists"
  #   value: "value"
  #   effect: "NoSchedule|PreferNoSchedule"

  ### Affinity and anti-affinity settings of this Pod
  ### https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ###
  ### Prefered podAntiAffinity will be applied if no one affinity configured
  ###
  affinity: {}
  # podAntiAffinity:
  #   preferredDuringSchedulingIgnoredDuringExecution:
  #   - weight: 100
  #     podAffinityTerm:
  #       labelSelector:
  #         matchExpressions:
  #         - key: app.kubernetes.io/name
  #           operator: In
  #           values:
  #           - wallarm-sidecar
  #         - key: app.kubernetes.io/instance
  #           operator: In
  #           values:
  #           - release-name
  #         - key: app.kubernetes.io/component
  #           operator: In
  #           values:
  #           - postanalytics
  #       topologyKey: kubernetes.io/hostname

  ### Node selector (node labels) for pods
  ### https://kubernetes.io/docs/user-guide/node-selection/
  ###
  nodeSelector: {}
  ### Grace period for the pods termination in seconds
  ###
  terminationGracePeriodSeconds: 30
  ### PriorityClass name to apply to the pods, Indicates the importance of the pod relative to other ones
  ### https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/
  ###
  priorityClassName: ""
  ### Additional containers for this pods
  ###
  extraContainers: []
  # - name: some-container
  #   image: some/image:latest
  #   env:
  #   - name: FOO
  #     value: "123"
  #   volumeMounts:
  #   - name: bar-volume
  #     mountPath: /mnt

  ### Additional init containers
  ###
  extraInitContainers: []
  # - name: init
  #   image: busybox
  #   command: ['sh', '-c', 'until nslookup myservice; do echo waiting for myservice; sleep 2; done;']

  ### Volumes that should attached to pods
  ###
  extraVolumes: []
  # - name: something
  #   emptyDir: {}

  ###
  ### Container-specific options
  ###
  addnode:
    image:
      registry: docker.io
      image: wallarm/ingress-ruby
      tag: "4.0.5-1"
      pullPolicy: IfNotPresent
    ### Additional environment variables to pass to the container
    ###
    extraEnvs: []
    # - name: FOO
    #   value: FOO
    # - name: BAR
    #   valueFrom:
    #     secretKeyRef:
    #       key: BAR
    #       name: bar-secret

    ### Lifecycle hooks
    ### https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/
    ###
    lifecycle: {}
    ### Privilegues and access controls for the container
    ### https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
    ### https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.21/#securitycontext-v1-core
    ###
    securityContext: {}
    ### The number of resources required for the container
    ### https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    ###
    resources: {}
    # limits:
    #   cpu: 250m
    #   memory: 300Mi
    # requests:
    #   cpu: 50m
    #   memory: 150Mi

    ### Liveness probe for the container. Disabled by default
    ###
    livenessProbe: {}
    ### Readiness probe for the container. Disabled by default
    ###
    readinessProbe: {}
    ## Additional volumes that should be mounted to the container
    ##
    extraVolumeMounts: []
    # - name: something
    #   mountPath: /mnt/something
  exportenv:
    image:
      registry: docker.io
      image: wallarm/ingress-ruby
      tag: "4.0.5-1"
      pullPolicy: IfNotPresent
    ### Additional environment variables to pass to the container
    ###
    extraEnvs: []
    # - name: FOO
    #   value: FOO
    # - name: BAR
    #   valueFrom:
    #     secretKeyRef:
    #       key: BAR
    #       name: bar-secret

    ### Lifecycle hooks
    ### https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/
    ###
    lifecycle: {}
    ### Privilegues and access controls for the container
    ### https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
    ### https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.21/#securitycontext-v1-core
    ###
    securityContext: {}
    ### The number of resources required for the container
    ### https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    ###
    resources: {}
    # limits:
    #   cpu: 250m
    #   memory: 300Mi
    # requests:
    #   cpu: 50m
    #   memory: 150Mi

    ### Liveness probe for the container. Disabled by default
    ###
    livenessProbe: {}
    ### Readiness probe for the container. Disabled by default
    ###
    readinessProbe: {}
    ## Additional volumes that should be mounted to the container
    ##
    extraVolumeMounts: []
    # - name: something
    #   mountPath: /mnt/something
  cron:
    config:
      ### Cron jobs configuration
      ###
      "export-attacks":
        schedule: "* * * * *"
        command: "/opt/wallarm/ruby/usr/share/wallarm-common/export-attacks -l STDOUT"
        timeout: 3h
      "export-counters":
        schedule: "* * * * *"
        command: "/opt/wallarm/ruby/usr/share/wallarm-common/export-counters -l STDOUT"
        timeout: 11m
      "export-environment":
        schedule: "0 */1 * * *"
        command: "/opt/wallarm/ruby/usr/share/wallarm-common/export-environment -l STDOUT"
        timeout: 10m
      "brute-detect":
        schedule: "* * * * *"
        command: "/opt/wallarm/ruby/usr/share/wallarm-common/brute-detect -l STDOUT"
        timeout: 6m
      "sync-markers":
        schedule: "* * * * *"
        command: "/opt/wallarm/ruby/usr/share/wallarm-common/sync-markers -l STDOUT"
        timeout: 1h
    image:
      registry: docker.io
      image: wallarm/ingress-ruby
      tag: "4.0.5-1"
      pullPolicy: IfNotPresent
    ### Additional environment variables to pass to the container
    ###
    extraEnvs: []
    # - name: FOO
    #   value: FOO
    # - name: BAR
    #   valueFrom:
    #     secretKeyRef:
    #       key: BAR
    #       name: bar-secret

    ### Lifecycle hooks
    ### https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/
    ###
    lifecycle: {}
    ### Privilegues and access controls for the container
    ### https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
    ### https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.21/#securitycontext-v1-core
    ###
    securityContext: {}
    ### The number of resources required for the container
    ### https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    ###
    resources: {}
    # limits:
    #   cpu: 250m
    #   memory: 300Mi
    # requests:
    #   cpu: 50m
    #   memory: 150Mi

    ### Liveness probe for the container. Disabled by default
    ###
    livenessProbe: {}
    ### Readiness probe for the container. Disabled by default
    ###
    readinessProbe: {}
    ## Additional volumes that should be mounted to the container
    ##
    extraVolumeMounts: []
    # - name: something
    #   mountPath: /mnt/something
  tarantool:
    config:
      ### The allocated memory size in GB for Tarantool in-memory storage. Detailed recommendations are provided
      ### here: https://docs.wallarm.com/admin-en/configuration-guides/allocate-resources-for-waf-node/
      ###
      arena: "0.5"
    image:
      registry: docker.io
      image: wallarm/ingress-tarantool
      tag: "4.0.5-1"
      pullPolicy: IfNotPresent
    ### Additional environment variables to pass to the container
    ###
    extraEnvs: []
    # - name: FOO
    #   value: FOO
    # - name: BAR
    #   valueFrom:
    #     secretKeyRef:
    #       key: BAR
    #       name: bar-secret

    ### Lifecycle hooks
    ### https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/
    ###
    lifecycle: {}
    ### Privilegues and access controls for the container
    ### https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
    ### https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.21/#securitycontext-v1-core
    ###
    securityContext: {}
    ### The number of resources required for the container
    ### https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    ###
    resources: {}
    # limits:
    #   cpu: 250m
    #   memory: 300Mi
    # requests:
    #   cpu: 50m
    #   memory: 150Mi

    ### Liveness probe for the container. Not recommended to change it, but you still can override
    ### default values for this
    ###
    livenessProbe:
      tcpSocket:
        port: 3313
      initialDelaySeconds: 10
      timeoutSeconds: 1
      periodSeconds: 10
      failureThreshold: 3
      successThreshold: 1
    ### Readiness probe for the container. Disabled by default
    ###
    readinessProbe: {}
    ## Additional volumes that should be mounted to the container
    ##
    extraVolumeMounts: []
    # - name: something
    #   mountPath: /mnt/something
  heartbeat:
    image:
      registry: docker.io
      image: wallarm/ingress-ruby
      tag: "4.0.5-1"
      pullPolicy: IfNotPresent
    ### Additional environment variables to pass to the container
    ###
    extraEnvs: []
    # - name: FOO
    #   value: FOO
    # - name: BAR
    #   valueFrom:
    #     secretKeyRef:
    #       key: BAR
    #       name: bar-secret

    ### Lifecycle hooks
    ### https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/
    ###
    lifecycle: {}
    ### Privilegues and access controls for the container
    ### https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
    ### https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.21/#securitycontext-v1-core
    ###
    securityContext: {}
    ### The number of resources required for the container
    ### https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    ###
    resources: {}
    # limits:
    #   cpu: 250m
    #   memory: 300Mi
    # requests:
    #   cpu: 50m
    #   memory: 150Mi

    ### Liveness probe for the container. Disabled by default
    ###
    livenessProbe: {}
    ### Readiness probe for the container. Disabled by default
    ###
    readinessProbe: {}
    ## Additional volumes that should be mounted to the container
    ##
    extraVolumeMounts: []
    # - name: something
    #   mountPath: /mnt/something
  appstructure:
    image:
      registry: docker.io
      image: wallarm/ingress-python
      tag: "4.0.5-1"
      pullPolicy: IfNotPresent
    ### Additional environment variables to pass to the container
    ###
    extraEnvs: []
    # - name: FOO
    #   value: FOO
    # - name: BAR
    #   valueFrom:
    #     secretKeyRef:
    #       key: BAR
    #       name: bar-secret

    ### Lifecycle hooks
    ### https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/
    ###
    lifecycle: {}
    ### Privilegues and access controls for the container
    ### https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
    ### https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.21/#securitycontext-v1-core
    ###
    securityContext: {}
    ### The number of resources required for the container
    ### https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    ###
    resources: {}
    # limits:
    #   cpu: 250m
    #   memory: 300Mi
    # requests:
    #   cpu: 50m
    #   memory: 150Mi

    ### Liveness probe for the container. Disabled by default
    ###
    livenessProbe: {}
    ### Readiness probe for the container. Disabled by default
    ###
    readinessProbe: {}
    ## Additional volumes that should be mounted to the container
    ##
    extraVolumeMounts: []
    # - name: something
    #   mountPath: /mnt/something
  ###
  ### Other postanalytics' objects
  ###
  service:
    ### Service type
    ### https://kubernetes.io/docs/concepts/services-networking/service/
    ### https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.21/#service-v1-core
    ###
    type: ClusterIP
    ## Service port
    ##
    port: 3313
    ## Service node port (if the service type is "NodePort" or "LoadBalancer")
    ##
    nodePort: 0
    ## Load balancer IP address
    ## https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer
    ##
    loadBalancerIP: ""
    ## Load balancer source ranges. Helpful for EKS/GKE/AKE
    ## https://kubernetes.io/docs/concepts/services-networking/service/#aws-nlb-support
    ##
    loadBalancerSourceRanges: []
    # - "192.168.0.0/16"
    # - "10.0.0.0/8"
    # - "172.16.0.0/12"

    ## Kubernetes external traffic policy
    ## https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/
    ##
    externalTrafficPolicy: ""
    ## Annotations for this Service
    ##
    annotations: {}
    ## IP address of this Service cluster
    ##
    clusterIP: ""
    ## ExternalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic
    ## for this service. These IPs are not managed by Kubernetes.
    ##
    externalIPs: []
  ## Pod Disturion Budget settings
  ## https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  ##
  podDisruptionBudget:
    enabled: true
    ### Select only one of these:
    ###
    maxUnavailable: 1
    # minAvailable: 1
  ## Service Account for this Pod
  ## https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  ##
  serviceAccount:
    create: true
    ## Name of the ServiceAccount. If creating not required then
    ## this name must be name of existing ServiceAccount object
    ##
    name: ""
    ## Annotations for the created Service Account
    ##
    annotations: {}
  extraLabels: {}
  extraAnnotations: {}
### Configuration for controller module
###
controller:
  image:
    registry: docker.io
    image: wallarm/sidecar-controller
    tag: "0.1.0"
    pullPolicy: IfNotPresent
  # -- Admission webhook configuration
  # @default -- *See below for details*
  admissionWebhook:
    # -- Defines how unrecognized errors from the admission endpoint are handled.
    # -- Allowed values are `Ignore` or `Fail`
    ###
    failurePolicy: Fail
    ### Cluster DNS name for resources discovery. Will be used only for creating/signing certificates
    ### required for running admission webhook controller. For many Kubernetes clusters this is
    ### "cluster.local" and you need not to change this for common cases.
    ###
    clusterDomainName: cluster.local
    ### Specifies the timeout for this webhook. After the timeout passes, the webhook call will be
    ### ignored or the API call will fail based on the failure policy
    ###
    timeoutSeconds: 10
    ### Decides whether to run the webhook based on if the object has matching labels. Set to null
    ### for clear default value and listen events for all pods
    ###
    objectSelector:
      matchLabels:
        wallarm-sidecar: enabled
    ### Mutation admission webhook controller TLS secrets. Required for running admission magic.
    ###
    secret:
      create: true
      ### You are welcome to use existing certificates with "ca.crt", "tls.crt" and "tls.key"
      ### keys. Required if `create` is false.
      ###
      existingSecretName: ""
      ### Extra labels for secret to create. Doesn't make sense if using existing
      ### certificates
      ###
      labels: {}
      ### Extra annotations for secret to create. Doesn't make sense if using existing
      ### certificates
      ###
      annotations: {}
    extraLabels: {}
    extraAnnotations: {}
  ### Number of deployment replicas. It is recommended to use more that one pods
  ### https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.21/#deploymentspec-v1-apps
  ###
  replicaCount: 2
  ### Settings for automated rolling updates
  ### https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.21/#deploymentstrategy-v1-apps
  ###
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  ### Labels to add to the pods
  ###
  podLabels: {}
  # key: value

  ### Annotations to add to the pods
  ###
  podAnnotations: {}
  # key: value

  ### Setting to allow this Pod to schedule onto nodes with matching taints
  ### https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  ###
  tolerations: []
  # - key: "key"
  #   operator: "Equal|Exists"
  #   value: "value"
  #   effect: "NoSchedule|PreferNoSchedule"

  ### Affinity and anti-affinity settings of this Pod
  ### https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ###
  ### Prefered podAntiAffinity will be applied if no one affinity configured
  ###
  affinity: {}
  # podAntiAffinity:
  #   preferredDuringSchedulingIgnoredDuringExecution:
  #   - weight: 100
  #     podAffinityTerm:
  #       labelSelector:
  #         matchExpressions:
  #         - key: app.kubernetes.io/name
  #           operator: In
  #           values:
  #           - wallarm-sidecar
  #         - key: app.kubernetes.io/instance
  #           operator: In
  #           values:
  #           - release-name
  #         - key: app.kubernetes.io/component
  #           operator: In
  #           values:
  #           - controller
  #       topologyKey: kubernetes.io/hostname

  ### Node selector (node labels) for pods
  ### https://kubernetes.io/docs/user-guide/node-selection/
  ###
  nodeSelector: {}
  ### Grace period for the pods termination in seconds
  ###
  terminationGracePeriodSeconds: 30
  ### PriorityClass name to apply to the pods, Indicates the importance of the pod relative to other ones
  ### https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/
  ###
  priorityClassName: ""
  ### Additional containers for this pods
  ###
  extraContainers: []
  # - name: some-container
  #   image: some/image:latest
  #   env:
  #   - name: FOO
  #     value: "123"
  #   volumeMounts:
  #   - name: bar-volume
  #     mountPath: /mnt

  ### Additional init containers
  ###
  extraInitContainers: []
  # - name: init
  #   image: busybox
  #   command: ['sh', '-c', 'until nslookup myservice; do echo waiting for myservice; sleep 2; done;']

  ### Volumes that should attached to pods
  ###
  extraVolumes: []
  # - name: something
  #   emptyDir: {}

  ### Container command (entrypoint). Not recommended to change this, helpful for local development
  ###
  command: []
  ### Container arguments. Not recommended to change this, helpful for local development
  ###
  args:
    - --listen=:8443
    - --template=/etc/controller/template.yaml.tpl
    - --config=/etc/controller/config.yaml
    - --tls-cert-file=/etc/controller/tls/tls.crt
    - --tls-key-file=/etc/controller/tls/tls.key
    - --log-level=info
  ### Additional environment variables to pass to the container
  ###
  extraEnvs: []
  # - name: FOO
  #   value: FOO
  # - name: BAR
  #   valueFrom:
  #     secretKeyRef:
  #       key: BAR
  #       name: bar-secret

  ### Lifecycle hooks
  ### https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/
  ###
  lifecycle: {}
  ### Privilegues and access controls for the container
  ### https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  ### https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.21/#securitycontext-v1-core
  ###
  securityContext: {}
  ### The number of resources required for the container
  ### https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  ###
  resources: {}
  # limits:
  #   cpu: 250m
  #   memory: 300Mi
  # requests:
  #   cpu: 50m
  #   memory: 150Mi

  ### Liveness probe. Not recommended to change it, but you still can override
  ### default values for this
  ###
  livenessProbe:
    httpGet:
      path: /healthz
      port: https
      scheme: HTTPS
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 5
  ### Readiness probe. Not recommended to change it, but you still can override
  ### default values for this
  ###
  readinessProbe:
    httpGet:
      path: /healthz
      port: https
      scheme: HTTPS
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 5
  ## Additional volumes that should be mounted to the container
  ##
  extraVolumeMounts: []
  # - name: something
  #   mountPath: /mnt/something

  ###
  ### Other controller' objects
  ###
  service:
    ### Service type
    ### https://kubernetes.io/docs/concepts/services-networking/service/
    ### https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.21/#service-v1-core
    ###
    type: ClusterIP
    ## Service port
    ##
    port: 443
    ## Service node port (if the service type is "NodePort" or "LoadBalancer")
    ##
    nodePort: 0
    ## Load balancer IP address
    ## https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer
    ##
    loadBalancerIP: ""
    ## Load balancer source ranges. Helpful for EKS/GKE/AKE
    ## https://kubernetes.io/docs/concepts/services-networking/service/#aws-nlb-support
    ##
    loadBalancerSourceRanges: []
    # - "192.168.0.0/16"
    # - "10.0.0.0/8"
    # - "172.16.0.0/12"

    ## Kubernetes external traffic policy
    ## https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/
    ##
    externalTrafficPolicy: ""
    ## Annotations for this Service
    ##
    annotations: {}
    ## IP address of this Service cluster
    ##
    clusterIP: ""
    ## ExternalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic
    ## for this service. These IPs are not managed by Kubernetes.
    ##
    externalIPs: []
  ## Pod Disturion Budget settings
  ## https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  ##
  podDisruptionBudget:
    enabled: true
    ### Select only one of these:
    ###
    maxUnavailable: 1
    # minAvailable: 1
  ## Service Account for this Pod
  ## https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  ##
  serviceAccount:
    create: true
    ## Name of the ServiceAccount. If creating not required then
    ## this name must be name of existing ServiceAccount object
    ##
    name: ""
    ## Annotations for the created Service Account
    ##
    annotations: {}
  extraLabels: {}
  extraAnnotations: {}
extraLabels: {}
extraAnnotations: {}
