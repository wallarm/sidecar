initContainers:
  - name: sidecar-init-iptables
    image: wallarm/sidecar:0.9.0
    imagePullPolicy: IfNotPresent
    env:
      - name: POD_IP
        valueFrom:
          fieldRef:
            fieldPath: status.podIP
      - name: APP_PORT
        value: "80"
      - name: NGINX_PORT
        value: "26001"
    command: ["iptables"]
    args: ["-t", "nat", "-A", "PREROUTING", "-p", "tcp", "-d", "", "--dport", "", "-j", "REDIRECT", "--to-ports", "$(NGINX_PORT)"]
    securityContext:
      capabilities:
        add:
          - NET_ADMIN
        drop:
          - ALL
      privileged: true
    resources:
  - name: sidecar-init-helper
    image: wallarm/sidecar:0.9.0
    imagePullPolicy: IfNotPresent
    command: ["/usr/local/run-addnode.sh"]
    env:
      - name: WALLARM_API_HOST
        value: "audit.api.wallarm.com"
      - name: WALLARM_API_PORT
        value: "443"
      - name: WALLARM_API_TOKEN
        value: "topSecret"
      - name: WALLARM_API_USE_SSL
        value: "true"
      - name: WALLARM_API_CA_VERIFY
        value: "true"
      - name: WALLARM_SYNCNODE_OWNER
        value: www-data
      - name: WALLARM_SYNCNODE_GROUP
        value: www-data
        #TODO Determine proper way to identify sidecar version
      - name: WALLARM_INGRESS_CONTROLLER_VERSION
        value: "4.0.3"
    volumeMounts:
      - mountPath: /etc/wallarm
        name: wallarm
      - mountPath: /var/lib/wallarm-acl
        name: wallarm-acl
    securityContext:
      capabilities:
        add:
          - NET_BIND_SERVICE
        drop:
          - ALL
      runAsUser: 101
    resources:
containers:
  - name: sidecar-helper
    image: wallarm/sidecar:0.9.0
    imagePullPolicy: IfNotPresent
    command: ["supervisord", "-c", "/etc/supervisor/supervisord.helper.conf"]
    env:
      - name: WALLARM_API_HOST
        value: "audit.api.wallarm.com"
      - name: WALLARM_API_PORT
        value: "443"
      - name: WALLARM_API_TOKEN
        value: "topSecret"
      - name: WALLARM_API_USE_SSL
        value: "true"
      - name: WALLARM_API_CA_VERIFY
        value: "true"
      - name: WALLARM_CRON_EXPORT_ENV_SCHEDULE
        value: "0 */1 * * *"
      - name: WALLARM_CRON_EXPORT_ENV_TIMEOUT
        value: "10m"
      - name: WALLARM_CRON_EXPORT_ENV_COMMAND
        value: "/opt/wallarm/ruby/usr/share/wallarm-common/export-environment -l STDOUT"
      - name: WALLARM_CRON_EXPORT_METRICS_SCHEDULE
        value: "* * * * *"
      - name: WALLARM_CRON_EXPORT_METRICS_TIMEOUT
        value: "3h"
      - name: WALLARM_CRON_EXPORT_METRICS_COMMAND
        value: "/opt/wallarm/ruby/usr/share/wallarm-common/export-metrics -l STDOUT"
      - name: WALLARM_CRON_SYNC_IP_LISTS_SCHEDULE
        value: "* * * * *"
      - name: WALLARM_CRON_SYNC_IP_LISTS_TIMEOUT
        value: "3h"
      - name: WALLARM_CRON_SYNC_IP_LISTS_COMMAND
        value: "/opt/wallarm/ruby/usr/share/wallarm-common/sync-ip-lists -l STDOUT"
      - name: WALLARM_CRON_SYNC_IP_LISTS_SOURCE_SCHEDULE
        value: "*/5 * * * *"
      - name: WALLARM_CRON_SYNC_IP_LISTS_SOURCE_TIMEOUT
        value: "3h"
      - name: WALLARM_CRON_SYNC_IP_LISTS_SOURCE_COMMAND
        value: "/opt/wallarm/ruby/usr/share/wallarm-common/sync-ip-lists-source -l STDOUT"
      - name: WALLARM_SYNCNODE_OWNER
        value: www-data
      - name: WALLARM_SYNCNODE_GROUP
        value: www-data
        #TODO Determine proper way to identify sidecar version
      - name: WALLARM_INGRESS_CONTROLLER_VERSION
        value: "4.0.3"
    volumeMounts:
      - mountPath: /etc/wallarm
        name: wallarm
      - mountPath: /var/lib/wallarm-acl
        name: wallarm-acl
    securityContext:
      capabilities:
        add:
          - NET_BIND_SERVICE
        drop:
          - ALL
      runAsUser: 101
    resources:
  - name: sidecar-proxy
    image: wallarm/sidecar:0.9.0
    imagePullPolicy: IfNotPresent
    command: ["/usr/local/run-nginx.sh"]
    env:
      - name: WALLARM_MODE
        value: "block"
      - name: WALLARM_MODE_ALLOW_OVERRIDE
        value: "on"
      - name: WALLARM_PARSE_RESPONSE
        value: "on"
      - name: WALLARM_PARSE_WEBSOCKET
        value: "off"
      - name: WALLARM_UNPACK_RESPONSE
        value: "on"
      - name: WALLARM_TARANTOOL_HOST
        value: "wallarm-sidecar-postanalytics.default.svc"
      - name: WALLARM_UPSTREAM_CONNECT_ATTEMPTS
        value: "10"
      - name: WALLARM_UPSTREAM_RECONNECT_INTERVAL
        value: "15s"
      - name: NGINX_LISTEN_PORT
        value: "26001"
      - name: NGINX_PROXY_PASS_PORT
        value: "80"
      - name: NGINX_STATUS_PORT
        value: "10246"
      - name: NGINX_STATUS_PATH
        value: "/status"
      - name: NGINX_HEALTH_PATH
        value: "/health"
      - name: NGINX_WALLARM_STATUS_PATH
        value: "/wallarm-status"
      - name: NGINX_WALLARM_METRICS_PORT
        value: "18080"
      - name: NGINX_WALLARM_METRICS_PATH
        value: "/wallarm-metrics"
    ports:
      - name: status
        containerPort: 10246
        protocol: TCP
      - name: metrics
        containerPort: 18080
        protocol: TCP
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /healthz
        port: status
      initialDelaySeconds: 60
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    volumeMounts:
      - mountPath: /etc/wallarm
        name: wallarm
      - mountPath: /var/lib/wallarm-acl
        name: wallarm-acl
      - mountPath: /var/lib/nginx/wallarm/
        name: wallarm-cache
    securityContext:
      capabilities:
        add:
          - NET_BIND_SERVICE
        drop:
          - ALL
      runAsUser: 101
    resources:
volumes:
  - name: wallarm
    emptyDir: {}
  - name: wallarm-acl
    emptyDir: {}
  - name: wallarm-cache
    emptyDir: {}
